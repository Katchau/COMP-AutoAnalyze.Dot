import java.util.HashMap;

/* Generated By:JJTree: Do not edit this line. start.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public class start extends SimpleNode {
    HashMap<String, Automata> curAutomatas = new HashMap<>();

    public start(int id) {
        super(id);
    }

    public start(AutoAnalyserParser p, int id) {
        super(p, id);
    }

    public void readCondition(Node child){
        System.out.println("Lollipop :)");
        String id = "";
        String file = ""; //wtf dumbij
        for(int j = 0; j < child.jjtGetNumChildren(); j++){
            Node gchild = child.jjtGetChild(j);
            if(gchild instanceof identifier)
                id = ((identifier) gchild).name;
            if(gchild instanceof loaddotty){
                Node ggchild = gchild.jjtGetChild(0);
                if(ggchild instanceof filename)
                    file = ((filename) ggchild).name;
                else System.err.println("Missing filename. This should'nt happen ");
            }
        }
        file = file.substring(1,file.length()-1);
        System.out.println("Automata information for ID " + id);
        curAutomatas.put(id,new Automata(file));
    }

    public void execute() {
    System.out.println("Start");
        for(int i = 0; i < children.length ; i++) {
            Node child = children[i];
            if(child instanceof read){
                readCondition(child);
            }
            if(child instanceof saves){
                //usar isto dp x) AutomataOperations.exportAutomata(Graph, String);
                System.out.println("To be continued ...");
            }
            child.execute();
            System.out.println("Execute " + child.toString());
        }

    }

}
/* JavaCC - OriginalChecksum=598994b6409c3d3955b1bdd4b4c2af2c (do not edit this line) */
